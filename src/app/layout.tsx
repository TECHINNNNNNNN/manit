import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";
import { TRPCReactProvider } from "@/trpc/client";
import { Toaster } from "sonner";
import { ClerkProvider } from "@clerk/nextjs";
import { AnimatedBackground } from "@/components/ui/animated-background";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

/**
 * FONT CONFIGURATION
 * PURPOSE: Typography hierarchy for vibrant dark theme
 * FLOW: Display > Brand > UI > Body > Code
 * DEPENDENCIES: Local font files in /public/font
 */

// Display font for hero headlines - warm & engaging
const pacifico = localFont({
  src: "../../public/font/Pacifico-Regular.ttf",
  variable: "--font-pacifico",
  display: "swap",
  weight: "400",
});

// Brand font for logo & special headings - friendly yet professional
const playpenSans = localFont({
  src: "../../public/font/PlaypenSans-VariableFont_wght.ttf",
  variable: "--font-playpen",
  display: "swap",
  weight: "300 800",
});

// UI font for interface elements - modern & clean
const plusJakarta = localFont({
  src: [
    {
      path: "../../public/font/PlusJakartaSans-VariableFont_wght.ttf",
      style: "normal",
    },
    {
      path: "../../public/font/PlusJakartaSans-Italic-VariableFont_wght.ttf",
      style: "italic",
    },
  ],
  variable: "--font-plus-jakarta",
  display: "swap",
  weight: "200 800",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <TRPCReactProvider>
        <html lang="en">
          <body
            className={`${geistSans.variable} ${geistMono.variable} ${pacifico.variable} ${playpenSans.variable} ${plusJakarta.variable} antialiased`}
          >
            <AnimatedBackground />
            <Toaster />
            {children}
          </body>
        </html>
      </TRPCReactProvider>
    </ClerkProvider>
  );
}
